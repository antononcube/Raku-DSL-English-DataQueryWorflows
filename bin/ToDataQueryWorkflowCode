#!/usr/bin/env perl6

use DSL::English::DataQueryWorkflows;

#| Translates natural language commands into data transformations programming code.
multi sub MAIN(Str $command,                       #= A string with one or many commands (separated by ';').
               Str :t(:$target) = 'R-tidyverse',   #= Target (programming language with optional library spec.)
               Str :l(:$language) = 'English',     #= The natural language to translate from.
               Str :f(:$format) = 'automatic',     #= The format of the output, one of 'automatic', 'code', 'hash', or 'raku'.
               Bool :c(:$clipboard) = True         #= Should the result be copied to the clipboard or not?
               ) {

    my Str $formatSpec = $format.lc (elem) <auto automatic whatever> ?? 'code' !! $format.lc;

    my $res = ToDataQueryWorkflowCode($command, $target, :$language, format => $formatSpec);

    say $res;

    if $clipboard {
        given $*DISTRO {
            when $_ ~~ 'macos' {
                shell "echo '$res' | pbcopy";
            }

            when $_.is-win {
                shell "echo '$res' | clip.exe";
            }

            default {
                # Assuming it is Linux and it has xclip
                shell "echo '$res' | xclip -selection clipboard"
            }
        }
    }
}

multi sub MAIN(Str $target,                    #= Programming language.
               Str $command,                   #= A string with one or many commands (separated by ';').
               Str :l(:$language) = 'English',     #= The natural language to translate from.
               Str :f(:$format) = 'automatic',     #= The format of the output, one of 'automatic', 'code', 'hash', or 'raku'.
               Bool :c(:$clipboard) = True         #= Should the result be copied to the clipboard or not?
               ) {
    MAIN($command, :$target, :$language, :$format, :$clipboard);
}
